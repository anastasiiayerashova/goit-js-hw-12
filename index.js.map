{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export const BASE_URL = \"https://pixabay.com/api/\";\nexport const API_KEY = \"46106680-1f6bf9cc8c5ebc2359fb269e0\";\n\nexport function fetchData(searchQuery) {\nconst urlParams = new URLSearchParams({ q: searchQuery, image_type: \"photo\", orientation: \"horizontal\", safesearch: \"true\" });\n\nreturn fetch(`${BASE_URL}?key=${API_KEY}&${urlParams}`).then(response => {\n        if (!response.ok) {\n            throw new Error('Sorry, there are no images matching your search query. Please try again!');\n        }\n        return response.json();\n    })\n};","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport const loader = document.querySelector(\".div-loader\");\n\nexport function showErrorMessage(message) {\n    iziToast.error({\n        title: 'Error',\n        message,\n    });\n}\n\nexport function toggleLoader(show) {\nloader.style.visibility = show ? \"visible\" : \"hidden\";\n}\n\nexport function renderMarkup({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) {\n        return `<li class=\"image\">\n        <a class = \"gallery-link\" href = \"${largeImageURL}\">  \n        <img src = \"${webformatURL}\" alt = \"${tags}\" />\n        </a>\n        <div class = \"card-body\">   \n          <p class=\"text\">Likes <span class = \"value\">${likes}</span></p>\n          <p class=\"text\">Views <span class = \"value\">${views}</span></p>\n          <p class=\"text\">Comments <span class = \"value\">${comments}</span></p>\n          <p class=\"text\">Downloads <span class = \"value\">${downloads}</span></p>\n          </div>\n        </li>`;\n}\n    \nexport const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',        \n    captionPosition: 'bottom',  \n    captionDelay: 250, \n});","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { BASE_URL, API_KEY, fetchData } from \"./js/pixabay-api\";\nimport { showErrorMessage, loader, toggleLoader, renderMarkup, lightbox } from \"./js/render-functions\";\n\ndocument.head.insertAdjacentHTML(\"beforeend\", `<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital@0;1&display=swap\" rel=\"stylesheet\"><link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,500;1,500&display=swap\" rel=\"stylesheet\">`)\n\nconst ul = document.querySelector(\".gallery\");\nconst btn = document.querySelector(\".btn\");\nconst form = document.querySelector(\".container\");\n\nfunction checkForm(event) {\n\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchQuery = form.elements.query.value.trim();\n\n    if ( !searchQuery) {\n        showErrorMessage('Sorry, there are no images matching your search query. Please try again!');\n        return;\n    }\n\n    ul.innerHTML = \"\";\n    toggleLoader(true);\n    btn.disabled = true;\n  \n    fetchData(searchQuery).then(data => {\n\n       if (data.hits.length === 0) {\n           showErrorMessage('Sorry, there are no images matching your search query. Please try again!');\n           return;\n        }\n \n        const images = data.hits;\n        const imagesMarkup = images.map(renderMarkup).join(\"\");\n        ul.insertAdjacentHTML(\"beforeend\", imagesMarkup);\n        lightbox.refresh();\n        form.reset();\n        \n    })\n        .catch(error => {\n        showErrorMessage(error.message);\n        })\n        \n        .finally(() => {\n        toggleLoader(false)\n        btn.disabled = false;\n    });\n}\n\nform.addEventListener(\"submit\", checkForm);"],"names":["BASE_URL","API_KEY","fetchData","searchQuery","urlParams","response","loader","showErrorMessage","message","iziToast","toggleLoader","show","renderMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","lightbox","SimpleLightbox","ul","btn","form","checkForm","event","data","imagesMarkup","error"],"mappings":"6vBAAO,MAAMA,EAAW,2BACXC,EAAU,qCAEhB,SAASC,EAAUC,EAAa,CACvC,MAAMC,EAAY,IAAI,gBAAgB,CAAE,EAAGD,EAAa,WAAY,QAAS,YAAa,aAAc,WAAY,MAAQ,CAAA,EAE5H,OAAO,MAAM,GAAGH,CAAQ,QAAQC,CAAO,IAAIG,CAAS,EAAE,EAAE,KAAKC,GAAY,CACjE,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,0EAA0E,EAE9F,OAAOA,EAAS,MACxB,CAAK,CACL,CCPO,MAAMC,EAAS,SAAS,cAAc,aAAa,EAEnD,SAASC,EAAiBC,EAAS,CACtCC,EAAS,MAAM,CACX,MAAO,QACP,QAAAD,CACR,CAAK,CACL,CAEO,SAASE,EAAaC,EAAM,CACnCL,EAAO,MAAM,WAAaK,EAAO,UAAY,QAC7C,CAEO,SAASC,EAAa,CAAC,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,EAAG,CAC7F,MAAO;AAAA,4CAC6BL,CAAa;AAAA,sBACnCD,CAAY,YAAYE,CAAI;AAAA;AAAA;AAAA,wDAGMC,CAAK;AAAA,wDACLC,CAAK;AAAA,2DACFC,CAAQ;AAAA,4DACPC,CAAS;AAAA;AAAA,cAGrE,CAEO,MAAMC,EAAW,IAAIC,EAAe,aAAc,CACrD,aAAc,MACd,gBAAiB,SACjB,aAAc,GAClB,CAAC,EC5BD,SAAS,KAAK,mBAAmB,YAAa;AAAA;AAAA,8NAEgL,EAE9N,MAAMC,EAAK,SAAS,cAAc,UAAU,EACtCC,EAAM,SAAS,cAAc,MAAM,EACnCC,EAAO,SAAS,cAAc,YAAY,EAEhD,SAASC,EAAUC,EAAO,CAEtBA,EAAM,eAAc,EACpB,MAAMF,EAAOE,EAAM,cACbvB,EAAcqB,EAAK,SAAS,MAAM,MAAM,OAE9C,GAAK,CAACrB,EAAa,CACfI,EAAiB,0EAA0E,EAC3F,MACH,CAEDe,EAAG,UAAY,GACfZ,EAAa,EAAI,EACjBa,EAAI,SAAW,GAEfrB,EAAUC,CAAW,EAAE,KAAKwB,GAAQ,CAEjC,GAAIA,EAAK,KAAK,SAAW,EAAG,CACxBpB,EAAiB,0EAA0E,EAC3F,MACF,CAGD,MAAMqB,EADSD,EAAK,KACQ,IAAIf,CAAY,EAAE,KAAK,EAAE,EACrDU,EAAG,mBAAmB,YAAaM,CAAY,EAC/CR,EAAS,QAAO,EAChBI,EAAK,MAAK,CAElB,CAAK,EACI,MAAMK,GAAS,CAChBtB,EAAiBsB,EAAM,OAAO,CACtC,CAAS,EAEA,QAAQ,IAAM,CACfnB,EAAa,EAAK,EAClBa,EAAI,SAAW,EACvB,CAAK,CACL,CAEAC,EAAK,iBAAiB,SAAUC,CAAS"}